// <auto-generated />
using System;
using Docker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Docker.Data.Migrations
{
    [DbContext(typeof(DockerDbContext))]
    [Migration("20201001114512_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Docker.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 294, DateTimeKind.Unspecified).AddTicks(302), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "First product",
                            Name = "Product 1",
                            Price = 10m,
                            UpdatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 295, DateTimeKind.Unspecified).AddTicks(4603), new TimeSpan(0, 2, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 295, DateTimeKind.Unspecified).AddTicks(4927), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Second product",
                            Name = "Product 2",
                            Price = 15m,
                            UpdatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 295, DateTimeKind.Unspecified).AddTicks(4935), new TimeSpan(0, 2, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 295, DateTimeKind.Unspecified).AddTicks(4938), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Third product",
                            Name = "Product 3",
                            Price = 20m,
                            UpdatedAt = new DateTimeOffset(new DateTime(2020, 10, 1, 13, 45, 12, 295, DateTimeKind.Unspecified).AddTicks(4941), new TimeSpan(0, 2, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
