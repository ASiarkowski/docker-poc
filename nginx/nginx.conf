worker_processes 1;
  
events { worker_connections 1024; }

http {
    sendfile on;

    # use docker DNS, this allows the nginx instance to start even if the upstreams cannot be reached yet
    resolver 127.0.0.11 ipv6=off valid=30s;

    proxy_set_header   Host $http_host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header   X-Forwarded-Proto $scheme;

    server {
        listen 80;
        listen 443;
        ssl on;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;

        server_name rabbitmq.docker-poc.local;

        location / {
            set $host_docker_poc_rabbitmq docker-poc-rabbitmq;

            proxy_pass         http://$host_docker_poc_rabbitmq:15672;
            proxy_redirect     off;
        }
    }

    server {
        listen 80;
        listen 443;
        ssl on;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/key.pem;

        server_name *.docker-poc.local;

        location /api/ {
            set $host_docker_poc_api docker-poc-api;

            proxy_pass         http://$host_docker_poc_api;
            proxy_redirect     off;
        }

        location / {
            set $host_docker_poc_web docker-poc-web;

            proxy_pass         http://$host_docker_poc_web;
            proxy_redirect     off;
        }
    }
}