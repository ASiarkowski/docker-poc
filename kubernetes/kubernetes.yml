apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-mssql
    name: docker-poc-mssql
  spec:
    ports:
    - name: "11433"
      port: 11433
      targetPort: 1433
    selector:
      io.kompose.service: docker-poc-mssql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-rabbitmq
    name: docker-poc-rabbitmq
  spec:
    ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "5672"
      port: 5672
      targetPort: 5672
    selector:
      io.kompose.service: docker-poc-rabbitmq
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-web
    name: docker-poc-web
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    - name: "8443"
      port: 8443
      targetPort: 443
    selector:
      io.kompose.service: docker-poc-web
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-mssql
    name: docker-poc-mssql
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: docker-poc-mssql
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
            convert -f ..\compose\docker-compose.yml -o kubernetes.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/internal: "true"
          io.kompose.service: docker-poc-mssql
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: yourStrong(!)Password
          image: mcr.microsoft.com/mssql/server
          imagePullPolicy: ""
          name: docker-poc-mssql
          ports:
          - containerPort: 1433
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: internal
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/internal: "true"
    podSelector:
      matchLabels:
        io.kompose.network/internal: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-rabbitmq
    name: docker-poc-rabbitmq
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: docker-poc-rabbitmq
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
            convert -f ..\compose\docker-compose.yml -o kubernetes.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/internal: "true"
          io.kompose.service: docker-poc-rabbitmq
      spec:
        containers:
        - image: masstransit/rabbitmq
          imagePullPolicy: ""
          name: docker-poc-rabbitmq
          ports:
          - containerPort: 15672
          - containerPort: 5672
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: internal
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/internal: "true"
    podSelector:
      matchLabels:
        io.kompose.network/internal: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-web
    name: docker-poc-web
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: docker-poc-web
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
            convert -f ..\compose\docker-compose.yml -o kubernetes.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/internal: "true"
          io.kompose.service: docker-poc-web
      spec:
        containers:
        - image: christiaanderidder/docker-poc-web
          imagePullPolicy: ""
          name: docker-poc-web
          ports:
          - containerPort: 80
          - containerPort: 443
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: internal
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/internal: "true"
    podSelector:
      matchLabels:
        io.kompose.network/internal: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f ..\compose\docker-compose.yml -o kubernetes.yml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: docker-poc-worker
    name: docker-poc-worker
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: docker-poc-worker
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
            convert -f ..\compose\docker-compose.yml -o kubernetes.yml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/internal: "true"
          io.kompose.service: docker-poc-worker
      spec:
        containers:
        - image: christiaanderidder/docker-poc-worker
          imagePullPolicy: ""
          name: docker-poc-worker
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: internal
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/internal: "true"
    podSelector:
      matchLabels:
        io.kompose.network/internal: "true"
kind: List
metadata: {}

